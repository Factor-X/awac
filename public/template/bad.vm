public class BaseActivityData$BAD-KEY extends ActivityResultContributor {

    @Override
    public List<BaseActivityData> getBaseActivityData(Map<QuestionCode, List<QuestionSetAnswer>> questionSetAnswers) {

        List<BaseActivityData> res = new ArrayList<>();

        //1. build unit(s) needed for
        //  - a) the BAD.unit
        //  - b) conversion

        // Get Target Unit (GJ in this case)
        // Allow finding unit by a UnitCode: getUnitByCode(UnitCode.$UNIT-KEY)
        Unit baseActivityDataUnit = getUnitByCode(UnitCode.$UNIT-KEY);


        //2. build BAD
        //2.1 loop for each answer for each loop for each parents of one or more question needed by the BAD

        /*
        // For each set of answers in A15, build an ActivityBaseData (see specifications)
        List<QuestionSetAnswer> questionSetAnswersA15 = questionSetAnswers.get(QuestionCode.A15);

        //2.2 control if the list if different than null
        if (questionSetAnswersA15 == null) {
            return res;
        }

        for (QuestionSetAnswer questionSetAnswer : questionSetAnswersA15) {
        */
            //create a map for each repetition level
            Map<QuestionCode, QuestionAnswer> answersByCode = byQuestionCode(questionSetAnswer.getQuestionAnswers());

            //load question for this level
            QuestionAnswer questionA16Answer = answersByCode.get(QuestionCode.A16);
            QuestionAnswer questionA17Answer = answersByCode.get(QuestionCode.A17);

            //control them
            if (questionA16Answer == null ||
            questionA17Answer == null) {
            continue;
            }

            //build the bad
            BaseActivityData baseActivityData = new BaseActivityData();

            baseActivityData.setKey($BAD-KEY-COMPLETE);
            baseActivityData.setRank($RANK);
            baseActivityData.setSpecificPurpose($SPECIFIC-PURPOSE-COMPLETE);
            baseActivityData.setActivityCategory($ACTIVITY-CATEGORY-CODE-COMPLETE);
            baseActivityData.setActivitySubCategory($ACTIVITY-SUB-CATEGORY-CODE-COMPLETE);
            baseActivityData.setActivityType($ACTIVITY-TYPE-COMPLETE);

            baseActivityData.setActivitySource(toActivitySourceCode(questionA16Answer));

            baseActivityData.setActivityOwnership($ACTIVITY-OWNERSHIP);
            baseActivityData.setUnit(baseActivityDataUnit);
            baseActivityData.setValue($VALUE);
            res.add(baseActivityData);
        //}
        return res;
    }

}