# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

#
# Home page
#
GET         /                                                               @eu.factorx.awac.controllers.ApplicationController.index()
GET         /enterprise                                                     @eu.factorx.awac.controllers.ApplicationController.calculator(app= "enterprise")
GET         /municipality                                                   @eu.factorx.awac.controllers.ApplicationController.calculator(app= "municipality")
GET         /event                                                          @eu.factorx.awac.controllers.ApplicationController.calculator(app= "event")
GET         /little-emitter                                                 @eu.factorx.awac.controllers.ApplicationController.calculator(app= "little-emitter")
GET         /household                                                      @eu.factorx.awac.controllers.ApplicationController.calculator(app= "household")
GET         /verification                                                   @eu.factorx.awac.controllers.ApplicationController.verification()
GET         /admin                                                          @eu.factorx.awac.controllers.ApplicationController.admin()

#
# Translations
#
GET         /awac/translations/:lang                                        @eu.factorx.awac.controllers.TranslationController.fetch(lang:String)

#
# Notifications
#
GET         /awac/notifications/get_notifications                           @eu.factorx.awac.controllers.NotificationController.getNotifications()

#
# Login rest api
#
POST        /awac/login                                                     @eu.factorx.awac.controllers.AuthenticationController.authenticate()
POST        /awac/logout                                                    @eu.factorx.awac.controllers.AuthenticationController.logout()
POST        /awac/testAuthentication                                        @eu.factorx.awac.controllers.AuthenticationController.testAuthentication()
POST        /awac/forgotPassword                                            @eu.factorx.awac.controllers.AuthenticationController.forgotPassword()

#
# registration ctrl
#
POST        /awac/registration/enterprise                                   @eu.factorx.awac.controllers.RegistrationController.enterpriseRegistration()
POST        /awac/registration/municipality                                 @eu.factorx.awac.controllers.RegistrationController.municipalityRegistration()
POST        /awac/registration/household                                    @eu.factorx.awac.controllers.RegistrationController.householdRegistration()
POST        /awac/registration/validator                                    @eu.factorx.awac.controllers.RegistrationController.verificationRegistration()
POST        /awac/registration/little_emitter                               @eu.factorx.awac.controllers.RegistrationController.littleEmitterRegistration()
POST        /awac/registration/event                                        @eu.factorx.awac.controllers.RegistrationController.eventRegistration()


#
# invitation ctrl
#
POST        /awac/invitation                                                @eu.factorx.awac.controllers.InvitationController.launchInvitation()
POST        /awac/register                                                  @eu.factorx.awac.controllers.InvitationController.registerInvitation()

#
# PDF controller
#

GET         /awac/pdf                                                       eu.factorx.awac.controllers.PdfController.asPdf()
GET         /awac/svg                                                       eu.factorx.awac.controllers.PdfController.withSvg()


#
# Velocity controller
#

GET         /awac/velocity                                                  @eu.factorx.awac.controllers.VelocityController.velocity()


#
# Email Service
#
GET         /email/send                                                     @eu.factorx.awac.controllers.EmailController.send(destinationEmail:String,subject:String,message:String)
#GET         /email/sendWithAttachments                                      @eu.factorx.awac.controllers.EmailController.sendWithAttachments(destinationEmail:String,subject:String,message:String,filenameList:java.util.List[String])
#GET         /email/sendComplete                                                                    @eu.factorx.awac.controllers.EmailController.sendComplete(destinationEmail:String,subject:String,message:String,interfaceName:String,languageKey:String)


#
# Javascript routing
#
GET         /assets/javascripts/routes                                      @eu.factorx.awac.controllers.ApplicationController.javascriptRoutes()

#
# Map static resources from the /public folder to the /assets URL path
#
GET         /assets/*file                                                   controllers.Assets.at(path="/public", file)

#
# Answer controller => used to save answer
#
GET         /awac/answer/getByForm/:form/:period/:scope                     @eu.factorx.awac.controllers.AnswerController.getByForm(form: String, period: String, scope: Long)
POST        /awac/answer/save                                               @eu.factorx.awac.controllers.AnswerController.save()
GET         /awac/answer/getPeriodsForComparison/:scope                     @eu.factorx.awac.controllers.AnswerController.getPeriodsForComparison(scope: Long)
POST        /awac/answer/formProgress                                       @eu.factorx.awac.controllers.AnswerController.setFormProgress()
GET         /awac/answer/formProgress/:period/:scope                        @eu.factorx.awac.controllers.AnswerController.getFormProgress(period: String, scope :Long)
GET         /awac/answer/unlockForm/:form/:period/:scope                    @eu.factorx.awac.controllers.AnswerController.unlockForm(form: String, period: String, scope :Long)
POST        /awac/answer/lockQuestionSet                                    @eu.factorx.awac.controllers.AnswerController.lockQuestionSet()
POST        /awac/answer/validateQuestionSet                                @eu.factorx.awac.controllers.AnswerController.validateQuestionSet()
GET         /awac/answer/testClosing/:periodKey/:scopeId                    @eu.factorx.awac.controllers.AnswerController.testClosing(periodKey: String, scopeId :Long)
GET         /awac/answer/testClosingValidation/:periodKey/:scopeId          @eu.factorx.awac.controllers.AnswerController.testClosingValidation(periodKey: String, scopeId :Long)
POST        /awac/answer/closeForm/                                         @eu.factorx.awac.controllers.AnswerController.closeForm()


#
# ResultController => used to get report
#
POST        /awac/result/getReport                                          @eu.factorx.awac.controllers.ResultController.getReport()
POST        /awac/result/getReportAsXls                                     @eu.factorx.awac.controllers.ResultController.getReportAsXls()
POST        /awac/result/getReportAsPdf                                     @eu.factorx.awac.controllers.ResultController.getReportAsPdf()

#
# Upload
#
POST        /awac/file/upload/                                              @eu.factorx.awac.controllers.FilesController.upload()
GET         /awac/file/download/:storedFileId                               @eu.factorx.awac.controllers.FilesController.download(storedFileId: Long)


#
# User profile
#
GET         /awac/user/profile                                              @eu.factorx.awac.controllers.UserProfileController.getUserProfileData()
POST        /awac/user/profile/save                                         @eu.factorx.awac.controllers.UserProfileController.saveUserProfileData()
POST        /awac/user/profile/anonymous/save                               @eu.factorx.awac.controllers.UserProfileController.saveAnonymousUserProfileData()
POST        /awac/user/email/save                                           @eu.factorx.awac.controllers.UserProfileController.updateEmail()
POST        /awac/user/password/save                                        @eu.factorx.awac.controllers.UserProfileController.updatePassword()
POST        /awac/user/isAdminAccount                                       @eu.factorx.awac.controllers.UserProfileController.isAdminAccount()
POST        /awac/user/setStatus                                            @eu.factorx.awac.controllers.UserProfileController.setStatus()
POST        /awac/user/activeAccount                                        @eu.factorx.awac.controllers.UserProfileController.activeAccount()

#
# Admin
#
GET         /awac/admin/codelabels/reset                                    @eu.factorx.awac.controllers.AdminController.resetCodeLabels()
GET         /awac/admin/indicators_factors/reset                            @eu.factorx.awac.controllers.AdminController.resetIndicatorsAndFactors()
GET         /awac/admin/municipality_survey/create                          @eu.factorx.awac.controllers.AdminController.createMunicipalitySurveyData()
GET         /awac/admin/enterprise_survey/create                            @eu.factorx.awac.controllers.AdminController.createEnterpriseSurveyData()
GET         /awac/admin/badImporter/:interfaceString                        @eu.factorx.awac.controllers.AdminController.runBADImporter(interfaceString:String)

#
# site
#
POST        /awac/site/edit                                                 @eu.factorx.awac.controllers.SiteController.edit()
POST        /awac/site/create                                               @eu.factorx.awac.controllers.SiteController.create()
POST        /awac/site/assignPeriodToSite                                   @eu.factorx.awac.controllers.SiteController.assignPeriodToSite()
GET         /awac/site/:siteId                                              @eu.factorx.awac.controllers.SiteController.getSite(siteId:Long)

#
# product
#
POST        /awac/product/edit                                              @eu.factorx.awac.controllers.ProductController.edit()
POST        /awac/product/create                                            @eu.factorx.awac.controllers.ProductController.create()
POST        /awac/product/assignPeriodToProduct                             @eu.factorx.awac.controllers.ProductController.assignPeriodToProduct()
GET         /awac/product/:productId                                        @eu.factorx.awac.controllers.ProductController.getProduct(productId:Long)


#
# organization
#
POST        /awac/organization/site/associatedaccounts/load                 @eu.factorx.awac.controllers.OrganizationController.loadAssociatedAccounts()
POST        /awac/organization/product/associatedaccounts/load              @eu.factorx.awac.controllers.OrganizationController.loadAssociatedAccountsForProduct()
POST        /awac/organization/site/associatedaccounts/save                 @eu.factorx.awac.controllers.OrganizationController.saveAssociatedAccounts()
POST        /awac/organization/product/associatedaccounts/save                 @eu.factorx.awac.controllers.OrganizationController.saveAssociatedAccountsForProduct()
GET         /awac/organization/getMyOrganization                            @eu.factorx.awac.controllers.OrganizationController.getMyOrganization()
POST        /awac/organization/update                                       @eu.factorx.awac.controllers.OrganizationController.updateOrganization()


#
# organization event
GET         /awac/organization/events/load                                  @eu.factorx.awac.controllers.OrganizationEventController.load()
GET         /awac/organization/events/byOrganization/:organization          @eu.factorx.awac.controllers.OrganizationEventController.loadEventsByOrganization(organization:Long)
POST        /awac/organization/events/save                                  @eu.factorx.awac.controllers.OrganizationEventController.saveEvent()

#
# verification
#
GET         /awac/verification/requestsToManage                             @eu.factorx.awac.controllers.VerificationController.getRequestsToManage()
# used for verification interface => return a list of all verificationRequest for witch I'm one of assigned verifier
GET         /awac/verification/myVerificationRequests                       @eu.factorx.awac.controllers.VerificationController.getMyVerificationRequests()
# used for other interface => return a list of verificationRequest associated with my authorized scope (by period and account)
GET         /awac/verification/verificationRequests/:periodKey              @eu.factorx.awac.controllers.VerificationController.getAllMyVerificationRequests(periodKey:String)
GET         /awac/verification/verificationRequestsVerifiedToConfirm        @eu.factorx.awac.controllers.VerificationController.getVerificationRequestsVerifiedToConfirm()
GET         /awac/verification/archivedRequests                             @eu.factorx.awac.controllers.VerificationController.getArchivedRequests()
POST        /awac/verification/createRequest                                @eu.factorx.awac.controllers.VerificationController.createRequest()
POST        /awac/verification/setStatus                                    @eu.factorx.awac.controllers.VerificationController.setStatus()
POST        /awac/verification/addRequestByKey                              @eu.factorx.awac.controllers.VerificationController.addRequestByKey()
POST        /awac/verification/verify                                       @eu.factorx.awac.controllers.VerificationController.verify()

#
# reducing actions
#
GET         /awac/actions/load                                              @eu.factorx.awac.controllers.ReducingActionController.loadActions()
POST        /awac/actions/save                                              @eu.factorx.awac.controllers.ReducingActionController.saveAction()
POST        /awac/actions/delete                                            @eu.factorx.awac.controllers.ReducingActionController.deleteAction()
GET         /awac/actions/exportToXls                                       @eu.factorx.awac.controllers.ReducingActionController.getActionsAsXls()                                                                                    
GET         /awac/advices/load/:periodKey                                   @eu.factorx.awac.controllers.ReducingActionAdviceController.computeAdvices(periodKey:String)

#
# Admin interfaces
#
GET         /awac/admin/driver/all                                          @eu.factorx.awac.controllers.DriverController.getAll()
POST        /awac/admin/driver/update                                       @eu.factorx.awac.controllers.DriverController.update()
GET         /awac/admin/advices/load                                        @eu.factorx.awac.controllers.ReducingActionAdviceController.loadAdvices()
POST        /awac/admin/advices/save                                        @eu.factorx.awac.controllers.ReducingActionAdviceController.saveOrUpdateAdvice()
POST        /awac/admin/advices/delete                                      @eu.factorx.awac.controllers.ReducingActionAdviceController.deleteAdvice()

POST        /awac/admin/average/computeAverage                              @eu.factorx.awac.controllers.AverageController.computeAverage()
GET         /awac/admin/average/naceCodes                                   @eu.factorx.awac.controllers.AverageController.getNaceCodeList()

GET         /awac/admin/factors/all                                         @eu.factorx.awac.controllers.AdminController.allFactors()
POST        /awac/admin/factors/update                                      @eu.factorx.awac.controllers.AdminController.updateFactors()
POST        /awac/admin/factors/create                                      @eu.factorx.awac.controllers.AdminController.createFactor()
GET         /awac/admin/factors/export                                      @eu.factorx.awac.controllers.AdminController.exportFactors()

GET         /awac/admin/translations/sublists/load                          @eu.factorx.awac.controllers.TranslationAdminController.loadSublists()
POST        /awac/admin/translations/sublists/save                          @eu.factorx.awac.controllers.TranslationAdminController.updateSublist()
GET         /awac/admin/translations/baselists/load                         @eu.factorx.awac.controllers.TranslationAdminController.loadBaseLists()
POST        /awac/admin/translations/baselists/save                         @eu.factorx.awac.controllers.TranslationAdminController.updateBaseLists()
GET         /awac/admin/translations/codelabels/load/:codeLists             @eu.factorx.awac.controllers.TranslationAdminController.loadCodeLabels(codeLists:String)
POST        /awac/admin/translations/codelabels/save                        @eu.factorx.awac.controllers.TranslationAdminController.updateCodeLabels()
GET         /awac/admin/translations/surveyslabels/load                     @eu.factorx.awac.controllers.TranslationAdminController.loadSurveysLabels()
POST        /awac/admin/translations/surveyslabels/save                     @eu.factorx.awac.controllers.TranslationAdminController.updateSurveysLabels()

GET         /awac/admin/organizationData                                    @eu.factorx.awac.controllers.OrganizationDataController.getOrganizationData()
POST        /awac/admin/organizationData/sendEmail                          @eu.factorx.awac.controllers.OrganizationDataController.sendEmail()


GET         /awac/admin/translations/wysiwyg/all                            @eu.factorx.awac.controllers.AdminController.allWysiwygDocuments()
